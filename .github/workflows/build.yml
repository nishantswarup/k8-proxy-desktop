name: build-release

on:
  push:
    branches:
      - master
    tags:
      - 'v*'

jobs:
  electron-app-build-release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - name: Build Proxy Desktop app
        uses: samuelmeuli/action-electron-builder@v1
        with:
          github_token: ${{ secrets.github_token }}

      - name: Upload artifact - Mac
        if: startsWith(matrix.os, 'macOS')
        uses: actions/upload-artifact@v2
        with:
          name: "k8-proxy-desktop.dmg"
          path: dist/*.dmg

      - name: Upload artifact - Windows
        if: startsWith(matrix.os, 'Windows')
        uses: actions/upload-artifact@v2
        with:
          name: "k8-proxy-desktop.exe"
          path: dist/*.exe

      - name: Upload artifact - Linux Snap
        if: startsWith(matrix.os, 'Ubuntu')
        uses: actions/upload-artifact@v2
        with:
          name: "k8-proxy-desktop.snap"
          path: dist/*.snap

      - name: Release electron app - Windows
        if: startsWith(matrix.os, 'Windows')
        uses: samuelmeuli/action-electron-builder@v1
        with:
          github_token: ${{ secrets.github_token }}
          # If the commit is tagged with a version (e.g. "v1.0.0"),
          # release the app after building
          release: ${{ startsWith(github.ref, 'refs/tags/v') }}

      - name: Release electron app - Mac
        if: startsWith(matrix.os, 'macOS')
        uses: samuelmeuli/action-electron-builder@v1
        with:
          github_token: ${{ secrets.github_token }}
          # If the commit is tagged with a version (e.g. "v1.0.0"),
          # release the app after building
          release: ${{ startsWith(github.ref, 'refs/tags/v') }}

  website-build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.1
        with:
          persist-credentials: false

      - name: Install, Build
        env:
          CI: ""
        run: |
          cd static
          npm install
          CI= npm run build
          rm -rf node_modules/gh-pages/.cache

      - name: Deploy
        if: startsWith(github.ref, 'refs/tags/v')
        uses: JamesIves/github-pages-deploy-action@3.6.2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages
          FOLDER: static/build
          CLEAN: true